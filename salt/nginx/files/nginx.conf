user  nobody nobody;
worker_processes  {{num_cpus}};
error_log  logs/ngx_error.log  notice; #错误日志默认crit太低不好判断错误，调整到error或者更高的notice排错方便
pid  /var/run/nginx.pid;
worker_rlimit_nofile  65535;
#worker_cpu_affinity  000001 000010 000100 001000 010000 100000;
events {
       use  epoll;
       worker_connections  65535;
}

http {
     include  mime.types;
     default_type  application/octet-stream;

     log_format main  '$remote_addr - $remote_user [$time_local] "$request" '
                       '"$status" $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       '"$gzip_ratio" $request_time $bytes_sent $request_length "$upstream_addr"';
     
     #access_log logs/access.log main
     #全局不需要开正常日志，可以在站点下开
     access_log off;
     server_name_in_redirect off;
     sendfile on;
     tcp_nopush     on;
     server_tokens off;
     reset_timedout_connection on;           
     send_timeout           3m;           #默认60，建立连接三次握手的超时时间，超过就断开
     keepalive_timeout 75;                #默认就是75s，建立连接以后，75s秒没有信息交互就断开连接
     client_header_timeout  3m;           #建立连接后客户端请求头发送超时时间，默认60
     client_body_timeout    3m;           #建立链接后客户端请求体发送超时时间，有涉及上传文件单独location设置大值
     client_header_buffer_size 4k;        #默认1k，由于系统默认分页大小一般4k，设置4k也不会多浪费一个分页
     client_body_buffer_size  16k;        #默认2个系统分页大小，body一般可能会大，设置16K刚好，超过会写临时文件
     large_client_header_buffers  4 16k;  #默认4 8当请求头大于client_header_buffer_size值调用这个 
     client_max_body_size  5m;            #客户端上传文件大小
     proxy_connect_timeout 60;  #和upstream server建立连接时间默认60，别超过keepalive_timeout，不然前面先断了呵呵
     proxy_send_timeout 120;    #send和下面的read看优化文档
     proxy_read_timeout 120;  

     #client_body_temp_path  /dev/shm/client_body_temp; 
     #客户端请求体body大于16k会写临时文件，默认在/usr/local/nginx/下，改写内存/dev/shm会快N倍

#nginx做代理的CDN配置，如果要开启注意文件夹要手动创建好
     #proxy_temp_path   /dev/shm/proxy_temp;
     #proxy_cache_path 	/dev/shm/proxy_cache_path levels=1:2 use_temp_path=on keys_zone=cache_one:200 inactive=8m max_size=2g;
     #proxy_cache_valid 200 304 301 302 1m;
     #proxy_cache_use_stale  error timeout invalid_header updating http_500 http_502 http_503 http_504;
     #proxy_cache_revalidate on;
     #proxy_cache_lock on;  
     #proxy_cache_key $host$uri$is_args$args;
       
#压缩加速优化
     gzip  on;
     gzip_min_length  1024;
     gzip_comp_level  3;
     gzip_buffers     4 8k;
     gzip_vary on;
     gzip_http_version 1.0;  #CDN抓取目前只支持http1.0,nginx默认是1.1所以没办法最好改成1.0
     gzip_disable     "MSIE [1-6] \.";
     gzip_types text/plain text/css application/json application/x-javascript text/xml application/xmapplication/xml+rss text/javascript application/vnd.syncml+xml;

#nginx首页和状态页和缓存清理页
     server { 
             listen 80 backlog=65535;
	     server_name localhost;
             root html;
             access_log off;
             #首页
             location / {
                  index index.html;
             }    

             #状态页
             location /status {
                  stub_status on;
                  allow 127.0.0.1;
                  allow 172.18.0.0/16;
                  deny all;
             } 

#             #开启CDN时候清理缓存使用，需安装ngx_cache_purge模块
#             location ~ /purge(/.*) {
#                      #允许的IP
#                      allow 127.0.0.1;
#                      #172网段的都可以访问
#                      allow 172.18.0.0/16;
#                      deny all;  #其他的禁止访问
#                      proxy_cache_purge cache_one $host$1$is_args$args;
#              }   

              #关闭favicon.ico不存在时记录日志存在error.log里的，做web服务器会报这个错
              location = /favicon.ico {
                      log_not_found off;
                      access_log off;
              }   

#            #做lnmp时候，开启php状态监控
#             location ~ ^/phpstatus$ {
#                      include fastcgi_params;
#                      fastcgi_pass 127.0.0.1:9000;
#                      fastcgi_param SCRIPT_FILENAME $fastcgi_script_name;
#              }

               #做lnmp时候FastCGI配置，必须
#              location ~ \.php$ {
#                       root  /data/www/yihu.com;
#                       fastcgi_pass 127.0.0.1:9000;
#                       fastcgi_index  index.php;
#                       fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name; #$document_root对应上3行root配置
#                       include        fastcgi_params;
#                       fastcgi_param  SERVER_NAME    $host;  #多域名泛解析需要
#                       fastcgi_connect_timeout 300;
#                       fastcgi_send_timeout 300;
#                       fastcgi_read_timeout 300;
#                       fastcgi_buffer_size 16k;
#                       fastcgi_buffers 16 16k;
#                       fastcgi_busy_buffers_size 16k;
#                       fastcgi_temp_file_write_size 16k;
#
#                       #下面是做CDN缓存相关配置。。没那个技术怕动态给缓存了所以不配置哈哈
#                       #fastcgi_cache TEST;
#                       #fastcgi_cache_valid 200 302 1h;
#                       #fastcgi_cache_valid 301 1d;
#                       #fastcgi_cache_valid any 1m;
#                       #fastcgi_cache_min_uses 1;
#                       #fastcgi_cache_use_stale error timeout invalid_header http_500;
#                       #fastcgi_cache_key http://$host$request_uri;
#              }
       
     }

#普通反代范例
  #   server {
  #          listen 80;
  #          server_name www.yihugz.com;
  #          location / {
  #              proxy_pass http://www.yihugz.com;
  #              proxy_redirect off;
  #              proxy_set_header Host $host;
  #              proxy_set_header X-Real-IP $remote_addr;
  #              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #              proxy_next_upstream  http_502 http_504 http_404 error timeout invalid_header; #负载失败跳转
  #              access_log logs/www.yihugz.com.log main;
  #          }
  #   }
  #   upstream www.yihugz.com {
  #          server 10.0.0.76:80;
  #          server 192.168.0.22:80;
  #          check interval=3000 rise=2 fall=5 timeout=1000; #淘宝健康检查模块毫秒单位，需安装nginx_upstream_check_module模块
  #   }
	
#开启CND代理的范例，一般不会在/目录开启，会指定明细如指定后缀js、css、image等才缓存
#     server { 
#            listen 80 ;
#            server_name localhost;
#            location / {
#                 proxy_pass              http://172.18.20.3;
#                 proxy_set_header        Host $http_host;
#                 proxy_set_header        X-Real-IP $remote_addr;
#                 proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for; 
#                 proxy_next_upstream  http_502 http_504 http_404 error timeout invalid_header; 
#                 #以下CDN相关配置
#                 proxy_cache cache_one;        #开启CDN 匹配上面http里设置的keys_zone
#                 proxy_cache_valid any 8m;     #缓存时间，必须和http里的inactive保持一致最好
#                 add_header X-Cache '$upstream_cache_status from $server_addr';          #在head添加缓存是否命中的字段
#                 proxy_ignore_headers X-Accel-Expires Expires Cache-Control Set-Cookie;  #忽略upstream server的缓存字段
#                 
#                 client_max_body_size       50m; #针对大文件上传网址单独设置上传限制大小
#            }
#      }



#正向代理模拟squid，玩玩
#    server {
#            listen 82;
#            #server_name localhost;
#            location / {
#    		  resolver 218.85.157.88 114.114.114.114;
#    		  resolver_timeout 30s;
#                 proxy_pass $scheme://$host$request_uri;
#                 proxy_redirect off;
#                 proxy_set_header Host $host;
#                 proxy_set_header X-Real_IP $remote_addr;
#                 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#                 access_log logs/my.log main;
#      	     }
#    }

      include  vhosts/*.conf;
}



